#System authorization infomation
auth  --useshadow  --enablemd5 

#Installation media
cdrom

#Use text mode install
text

#Install OS instead of upgrade
install

#Do not configure the X Window System
skipx

#System keyboard
keyboard gb

#System mouse
mouse

#System timezone
timezone --utc Europe/London

#System language
lang en_GB

#Language modules to install
langsupport en_GB

#Firewall configuration
firewall --disabled

#Network information
network --bootproto=dhcp
#network --bootproto=static --ip=192.168.1.16 --netmask=255.255.255.192 --gateway=192.168.1.1 --nameserver=192.168.1.2

#Root password
#rootpw --disabled
rootpw --iscrypted {{kickstart_info.rootpw}}

#Initial user (user with sudo capabilities)
#user dougal --fullname "" --iscrypted --password <crypted_pw>
preseed passwd/make-user boolean false

#System bootloader configuration
bootloader --location=mbr 

#Clear the Master Boot Record
zerombr yes

#Partition clearing information
clearpart --all --initlabel 

#Basic disk partition
part / --fstype ext4 --size 1 --grow --asprimary 
#part swap --size 1024 
#part /boot --fstype ext4 --size 1024 --asprimary 

# Make minimalistic install
preseed pkgsel/ubuntu-standard boolean false
preseed base-installer/install-recommends boolean false
preseed base-installer/kernel/override-image string linux-virtual
preseed pkgsel/install-language-support boolean false

# Policy for applying updates. May be "none" (no automatic updates), "unattended-upgrades" (install security updates automatically), or "landscape" (manage system with Landscape).
preseed pkgsel/update-policy select unattended-upgrades

# Whether to upgrade packages after debootstrap. Allowed values: none, safe-upgrade, full-upgrade
preseed pkgsel/upgrade select full-upgrade

#Reboot after installation
reboot


%packages
openssh-server
open-vm-tools
cloud-init
curl
python3-pip


%post
## Force the original eth[n] naming convention
sed -ri 's/^(GRUB_CMDLINE_LINUX\s*=\s*)"(.*?)"$/\1"\2 net.ifnames=0 biosdevname=0"/' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg

## Force primary NIC to be at the top of the output from 'open-vm-tools guestinfo list' (for future Ansible playbooks)
echo "\n[guestinfo]\nprimary-nics=e*\nlow-priority-nics=vlan*\n" >> /etc/vmware-tools/tools.conf
## Set open-vm-tools polling interval to 7s so we get the IP address back faster (default 30s)
echo "poll-interval=7\n" >> /etc/vmware-tools/tools.conf

## Setup root ssh key
mkdir -p /root/.ssh
chmod 700 /root/.ssh
echo "{{kickstart_info.rootpubkey}}" > /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys

groupadd admin
sed -i -e '/%admin/s/ALL$/NOPASSWD:ALL/' /etc/sudoers

{% for adminuser in kickstart_info.adminusers %}
useradd -m --shell=/bin/bash --groups=admin {% if adminuser.password is defined and adminuser.password != "" %}--password='{{adminuser.password}}'{% endif %} {{adminuser.name}}
{% if adminuser.pubkey is defined and adminuser.pubkey != "" %}
mkdir -p ~{{adminuser.name}}/.ssh/
echo "{{adminuser.pubkey}}" > ~{{adminuser.name}}/.ssh/authorized_keys
chown -R {{adminuser.name}}:{{adminuser.name}} ~{{adminuser.name}}/.ssh
{% endif %}
{% endfor %}

useradd -m --shell=/bin/bash shutdown
echo "shutdown ALL=NOPASSWD: /sbin/shutdown" >> /etc/sudoers
mkdir -p ~shutdown/.ssh/
echo "{{shutdown_keypair.public_key}}" > ~shutdown/.ssh/authorized_keys
chown -R shutdown:shutdown ~shutdown/.ssh

cat <<EOFCLEAN >/etc/init.d/cleanup
#!/bin/bash
### BEGIN INIT INFO
# Provides:          cleanup
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0
# Short-Description: cleanup after shutdown
### END INIT INFO
case "\$1" in
start)
touch /var/lock/subsys/cleanup
;;
stop)
pkill -KILL -u shutdown
userdel -f -r shutdown
sed -i 's/shutdown ALL.*//' /etc/sudoers
# reset the machine-id to 0 so it is regenerated at next startup (when it is cloned), because this is the default dhcp unique identifier
truncate -s0 /etc/machine-id
update-rc.d cleanup remove
rm \$0
;;
*)
echo "Usage: /etc/init.d/cleanup stop"
exit 1
;;
esac
EOFCLEAN

chmod a+x /etc/init.d/cleanup
update-rc.d cleanup defaults

apt-get update

apt-get -y install python3-setuptools
apt-get -y install python3-wheel
apt-get -y install python3-netifaces
curl -sSL https://raw.githubusercontent.com/vmware/cloud-init-vmware-guestinfo/master/install.sh | sh -

apt-get -y dist-upgrade
apt-get --purge -y autoremove
rm -f /var/cache/apt/*
rm -f /var/lib/apt/lists/*
