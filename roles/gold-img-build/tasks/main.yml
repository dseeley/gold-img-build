---

- name: create temporary directory
  tempfile:
    state: directory
    suffix: EsxiBuildTEMP
  register: tmp_build_dir

- name: "Create {{os_id}} directory"
  file:
    path: "{{ tmp_build_dir.path }}/{{os_id}}"
    state: directory
  register: tmp_build_dir_installer_files

- set_fact:
    shutdown_password: "{{ lookup('password', '/dev/null length=16') }}"

- template:
    src: "{{item.src}}"
    dest: "{{tmp_build_dir_installer_files.path}}/{{(item.src | basename | splitext)[0]}}"
  with_filetree: "templates/{{os_id}}/"
  when: item.state == 'file'

- copy:
    src: "{{item}}"
    dest: "{{ tmp_build_dir.path }}/{{item}}"
  with_items:
    - "{{packer_info.pkg_url | basename}}"
    - "{{base_os[os_id].iso_url | basename}}"
  when: copylocal is defined and copylocal|bool

- block:
  - template:
      src: "Dockerfile.j2"
      dest: "{{ tmp_build_dir.path }}/Dockerfile"

  - name: Packer build Docker image
    docker_image:
      source: build
      build:
        pull: yes
        path: "{{ tmp_build_dir.path }}"
      force_source: true
      name: "{{packer_info.img_name}}:latest"
    register: r__docker_image

  - name: Packer create and run the Docker container
    docker_container:
      cleanup: yes
      detach: no
      name: "{{packer_info.img_name}}"
      image: "{{r__docker_image.image.Id}}"
      state: started
      restart_policy: "no"
      network_mode: host

  - name: Packer remove Docker image
    docker_image:
      name: "{{packer_info.img_name}}"
      force_absent: yes
      state: absent
  when: skip_docker is not defined or not skip_docker|bool

- name: Packer build (without Docker)
  command: "{{item}}"
  args:
    chdir: "{{ tmp_build_dir.path }}"
  with_items:
    - "unzip {{packer_info.pkg_url | basename}}"
    - "./packer build -on-error=abort ./{{os_id}}/packer.json"
  when: skip_docker is defined and skip_docker|bool

- name: Remove temporary directory
  file:
    path: "{{ tmp_build_dir.path }}"
    state: absent
