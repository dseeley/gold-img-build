---

- debug:
    msg: "NOTE: This xcp-ng provisioning role DOES NOT FINISH due to differences in the way packer-plugin-xenserver expects to connect to the image (requires SSH even when communicator is 'none').  See packerlog.txt"

- pause:

- name: create temporary directory
  tempfile:
    state: directory
    suffix: PackerBuildTMP
  register: tmp_build_dir

- name: "Create {{cloud_type}}__{{os_id}} directory"
  file:
    path: "{{ tmp_build_dir.path }}/{{cloud_type}}__{{os_id}}"
    state: directory
  register: tmp_build_dir_installer_files

- template:
    src: "{{item.src}}"
    dest: "{{tmp_build_dir_installer_files.path}}/{{(item.src | basename | splitext)[0]}}"
  with_filetree: "templates/{{os_id}}/"
  when: item.state == 'file'

- copy:
    src: "{{item}}"
    dest: "{{ tmp_build_dir.path }}/{{item}}"
  with_items:
    - "{{packer_pkg_url | basename}}"
    - "{{base_os[os_id].iso_url | basename}}"

## Note: The xcp-ng plugin is now added using the 'packer plugins install' within the _common/tasks/main.yml play
#- name: git clone ddelnano/packer-plugin-xenserver repo from github
#  become: true
#  git:
#    repo: "https://github.com/ddelnano/packer-plugin-xenserver.git"
#    version: "HEAD"
#    dest: "{{ tmp_build_dir.path }}/GH--packer-plugin-xenserver"
#
#- name: docker build packer-plugin-xenserver
#  shell: docker run --rm -v "$PWD":/mnt -w /mnt/GH--packer-plugin-xenserver golang:1.16-buster go build -o ../ -v
#  args:
#    chdir: "{{ tmp_build_dir.path }}"
#
#- name: rename packer-builder-xenserver to packer-plugin-xenserver (the 'packer-plugin-' prefix is significant, it tells packer that this is a multi-component plugin (https://www.packer.io/docs/plugins#installing-plugins))
#  command: "mv packer-builder-xenserver packer-plugin-xenserver"
#  args:
#    chdir: "{{ tmp_build_dir.path }}"
#    creates: "packer-plugin-xenserver"
#
#- name: validate packer-plugin-xenserver
#  block:
#    - name: ./packer-plugin-xenserver describe
#      command: ./packer-plugin-xenserver describe
#      args: { chdir: "{{ tmp_build_dir.path }}" }
#      register: r__command_packer_plugin_xenserver_describe
#
#    - debug: msg={{r__command_packer_plugin_xenserver_describe}}


- name: Packer build
  command: "{{item}}"
  args:
    chdir: "{{ tmp_build_dir.path }}"
  with_items:
    - "unzip {{packer_pkg_url | basename}}"
    - "./packer build -on-error=abort ./{{cloud_type}}__{{os_id}}/packer.json"
  environment:
    PACKER_LOG: 1
    PACKER_LOG_PATH: "./packerlog.txt"
